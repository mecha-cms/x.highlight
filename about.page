---
title: Highlight
description: Syntax highlighter that works server-side.
icon: 'M5.59 3.41L7 4.82L3.82 8L7 11.18L5.59 12.6L1 8l4.59-4.59m5.82 0L16 8l-4.59 4.6L10 11.18L13.18 8L10 4.82l1.41-1.41M22 6v12c0 1.11-.89 2-2 2H4a2 2 0 0 1-2-2v-4h2v4h16V6h-2.97V4H20c1.11 0 2 .89 2 2Z'
color: '#660000'
link: 'https://github.com/scrivo/highlight.php'
author: Taufik Nurrohman
type: Markdown
version: 3.0.0

alert:
  stale:
  - 'The third-party libraries used in this extension are considered obsolete and may not work with newer versions of PHP unless you disable the test mode.'
'
...

Highlight.php is a server-side syntax highlighter written in PHP. Itâ€™s a port of [highlight.js](https://highlightjs.org) by Ivan Sagalaev that makes full use of the language and style definitions of the original JavaScript project.

### Usage

Add one of the language type available in `.\lot\x\highlight\engine\i\@scrivo\highlight.php\Highlight\languages` folder to the `<code>` element:

~~~ .html
<pre><code class="php">&lt;?php

function foo($bar) {
    return 'baz';
}</code></pre>
~~~

Add `lang-` or `language-` prefix to the language type to make it a priority if you have multiple classes added to the `<code>` element:

~~~ .html
<pre><code class="foo bar language-php baz">&lt;?php

function foo($bar) {
    return 'baz';
}</code></pre>
~~~

Without specifying a priority, this extension will try to use one of the most relevant language types between `foo`, `bar` and `baz`:

~~~ .html
<pre><code class="foo bar baz">&lt;?php

function foo($bar) {
    return 'baz';
}</code></pre>
~~~

### Usage in Markdown

Use fenced code block syntax to add the language type to the `<code>` element in Markdown:

``` .markdown
~~~ .php
<?php

function foo($bar) {
    return 'baz';
}
~~~
```

### Syntax Highlighter Theme

Set your preferred syntax highlighter theme to the `skin` property in `.\lot\x\highlight\state.php` file:

~~~ .php
return [
    'skin' => 'agate'
];
~~~

Or use the global state modifier to overwrite it in `.\lot\y\*\index.php` file:

~~~ .php
State::set('x.highlight.skin', 'agate');
~~~